# This compiles a native Windows OCaml and flexdll and makes them
# available as an artifact.

# Compile the 64 bits version
platform:
  - x64

branches:
  only:
    - master

environment:
  global:
    CYG_ROOT: C:/cygwin
    CYG_MIRROR: http://mirrors.kernel.org/sourceware/cygwin/
    CYG_CACHE: C:/cygwin/var/cache/setup
    OCAMLROOT: "%PROGRAMFILES%/OCaml"
    OCAMLBRANCH: 4.08
    OCAMLFIND_VERSION: 1.8.1
    INSTALL_DUNE: True
    INSTALL_OPAM: True
    # INSTALL_OCAMLBUILD: True
    # INSTALL_OASIS: True

cache:
  - C:\cygwin\var\cache\setup

install:
  - mkdir "%OCAMLROOT%"
  - mkdir "%OCAMLROOT%/bin"
  - mkdir "%OCAMLROOT%/bin/flexdll"
  - appveyor DownloadFile "https://github.com/alainfrisch/flexdll/releases/download/0.37/flexdll-bin-0.37.zip" -FileName "flexdll.zip"
  - cinst 7zip.commandline
  - 7za x -y flexdll.zip
  - for %%F in (*.c *.h *.exe *.o *.obj) do copy %%F "%OCAMLROOT%\bin\flexdll"
  # Make sure the Cygwin path comes before the Git one (otherwise
  # cygpath behaves crazily), but after the MSVC one.
  - set Path=C:\cygwin\bin;%Path%
  - '"%CYG_ROOT%\setup-x86.exe" -qnNdO -R "%CYG_ROOT%" -s "%CYG_MIRROR%" -l "%CYG_CACHE%" -P diffutils -P dos2unix -P gcc-core -P make -P ncurses >NUL'
  # For ocamlfind:
  - '"%CYG_ROOT%\setup-x86.exe" -qnNdO -R "%CYG_ROOT%" -s "%CYG_MIRROR%" -l "%CYG_CACHE%" -P m4 >NUL'
  # For OPAM:
  - '"%CYG_ROOT%\setup-x86.exe" -qnNdO -R "%CYG_ROOT%" -s "%CYG_MIRROR%" -l "%CYG_CACHE%" -P gcc-g++ >NUL'
  - '%CYG_ROOT%\bin\bash -lc "cygcheck -dc cygwin"'
  - call "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x64
  - set Path=%OCAMLROOT%\bin;%OCAMLROOT%\bin\flexdll;%Path%

build_script:
  - set PFPATH=%PROGRAMFILES%
  - set FLEXDLLDIR=%OCAMLROOT%\bin\flexdll
  - echo VCPATH="`cygpath -p '%Path%'`" > %CYG_ROOT%\tmp\msenv
  - echo LIB="%LIB%" >> %CYG_ROOT%\tmp\msenv
  - echo LIBPATH="%LIBPATH%" >> %CYG_ROOT%\tmp\msenv
  - echo INCLUDE="%INCLUDE%;%FLEXDLLDIR%" >> %CYG_ROOT%\tmp\msenv
  - echo FLPATH="`cygpath '%FLEXDLLDIR%'`" >> %CYG_ROOT%\tmp\msenv
  - echo PATH="$VCPATH:$FLPATH:$PATH" >> %CYG_ROOT%\tmp\msenv
  - echo export PATH LIB LIBPATH INCLUDE >> %CYG_ROOT%\tmp\msenv
  - echo export OCAMLBUILD_FIND=/usr/bin/find >> %CYG_ROOT%\tmp\msenv
  - "%CYG_ROOT%/bin/bash -lc \"tr -d '\\r' </tmp/msenv > ~/.msenv64\""
  - "%CYG_ROOT%/bin/bash -lc \"echo '. ~/.msenv64' >> ~/.bash_profile\""
  - '%CYG_ROOT%/bin/bash -lc "$APPVEYOR_BUILD_FOLDER/build_ocaml.sh"'

after_build:
  - 7za a ocaml-%OCAMLBRANCH%.zip "%OCAMLROOT%"

artifacts:
  - path: ocaml-$(OCAMLBRANCH).zip
    name: OCaml
